function createBoard() {

    function getRandomBool() {
      if (Math.floor(Math.random() * 2) === 0) {
        return true;
      }
    }
    
    Game.prototype.getNullCell = function(){
      for (let i = 0; i<4; i++){
        for (let j=0; j<4; j++){
          if(this.state[j][i] === 0){
            return {x: i, y: j};
          }
        }
      }
    };

    Game.prototype.move = function(x, y) {
      let nullCell = this.getNullCell();
      let canMoveVertical = (x - 1 == nullCell.x || x + 1 == nullCell.x) && y == nullCell.y;
      let canMoveHorizontal = (y - 1 == nullCell.y || y + 1 == nullCell.y) && x == nullCell.x;

      if (canMoveVertical || canMoveHorizontal) {
        this.state[nullCell.y][nullCell.x] = this.state[y][x];
        this.state[y][x] = 0;
        this.clicks++;
      }
    };

    function Game(){
      this.state = [
        [1,2,3,4],
        [5,6,7,8],
        [9,10,11,12],
        [13,14,15,0]
      ];
    }

    Game.prototype.mix = function(count) {
      let x, y;
      for (let i = 0; i < count; i++) {
        let nullCell = this.getNullCell();

        let verticalMove = getRandomBool();
        let upLeft = getRandomBool();

        if (verticalMove) {
          x = nullCell.x; 
          if (upLeft) {
            y = nullCell.y - 1;
          } else {
            y = nullCell.y + 1;
          }
        } else {
          y = nullCell.y; 
          if (upLeft) {
            x = nullCell.x - 1;
          } else {
            x = nullCell.x + 1;
          }
        }

        if (0 <= x && x <= 3 && 0 <= y && y <= 3) {
          this.move(x, y);
        }
      }

      this.clicks = 0;
    };

    let game = new Game();
    game.mix(300);

    return game.state;
};